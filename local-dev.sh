#!/bin/bash

# Script para desenvolvimento local (sem Docker)

echo "üöÄ Payment Integrator API - Desenvolvimento Local"
echo "================================================"

case "$1" in
    "setup")
        echo "‚öôÔ∏è Configurando ambiente de desenvolvimento..."
        
        # Verificar se PostgreSQL est√° instalado
        if ! command -v psql &> /dev/null; then
            echo "‚ùå PostgreSQL n√£o encontrado!"
            echo "üí° Para instalar no macOS: brew install postgresql"
            exit 1
        fi
        
        # Verificar se o servi√ßo est√° rodando
        if ! pg_isready -h localhost -p 5432 &> /dev/null; then
            echo "‚ö†Ô∏è PostgreSQL n√£o est√° rodando. Iniciando..."
            brew services start postgresql
            sleep 3
        fi
        
        # Criar banco de dados
        echo "üì¶ Criando banco de dados..."
        createdb payment_integrator 2>/dev/null || echo "üì¶ Banco de dados j√° existe"
        
        # Executar script de inicializa√ß√£o
        psql -h localhost -d payment_integrator -f init.sql
        
        echo "‚úÖ Ambiente configurado!"
        ;;
    
    "start")
        echo "üèÉ Iniciando aplica√ß√£o..."
        go run main.go
        ;;
    
    "build")
        echo "üî® Fazendo build da aplica√ß√£o..."
        go build -o main .
        echo "‚úÖ Build conclu√≠do!"
        ;;
    
    "test")
        echo "üß™ Executando testes..."
        go test ./...
        ;;
    
    "deps")
        echo "üì¶ Atualizando depend√™ncias..."
        go mod tidy
        go mod download
        echo "‚úÖ Depend√™ncias atualizadas!"
        ;;
    
    "db")
        echo "üóÑÔ∏è Conectando ao banco de dados..."
        psql -h localhost -d payment_integrator
        ;;
    
    "health")
        echo "üè• Verificando health da API..."
        curl -s http://localhost:8080/api/v1/health | jq . 2>/dev/null || curl -s http://localhost:8080/api/v1/health
        ;;
    
    "demo")
        echo "üéØ Executando demonstra√ß√£o da API..."
        echo ""
        echo "1. Criando usu√°rios..."
        curl -s -X POST http://localhost:8080/api/v1/users \
          -H "Content-Type: application/json" \
          -d '{"name": "Jo√£o Silva", "email": "joao@email.com", "phone": "11999999999"}' | jq . 2>/dev/null
        
        curl -s -X POST http://localhost:8080/api/v1/users \
          -H "Content-Type: application/json" \
          -d '{"name": "Maria Santos", "email": "maria@email.com", "phone": "11888888888"}' | jq . 2>/dev/null
        
        echo ""
        echo "2. Criando pagamentos..."
        curl -s -X POST http://localhost:8080/api/v1/payments \
          -H "Content-Type: application/json" \
          -d '{"user_id": 1, "amount": 100.50, "method": "credit_card", "description": "Compra online"}' | jq . 2>/dev/null
        
        curl -s -X POST http://localhost:8080/api/v1/payments \
          -H "Content-Type: application/json" \
          -d '{"user_id": 1, "amount": 250.00, "method": "pix", "description": "Transfer√™ncia PIX"}' | jq . 2>/dev/null
        
        echo ""
        echo "3. Listando usu√°rios..."
        curl -s http://localhost:8080/api/v1/users | jq . 2>/dev/null
        
        echo ""
        echo "4. Listando pagamentos..."
        curl -s http://localhost:8080/api/v1/payments | jq . 2>/dev/null
        ;;
    
    *)
        echo "‚ùì Uso: $0 {setup|start|build|test|deps|db|health|demo}"
        echo ""
        echo "Comandos dispon√≠veis:"
        echo "  setup   - Configura o ambiente local (PostgreSQL)"
        echo "  start   - Inicia a aplica√ß√£o localmente"
        echo "  build   - Faz build da aplica√ß√£o Go"
        echo "  test    - Executa os testes"
        echo "  deps    - Atualiza as depend√™ncias Go"
        echo "  db      - Conecta ao banco PostgreSQL local"
        echo "  health  - Verifica se a API est√° rodando"
        echo "  demo    - Executa uma demonstra√ß√£o da API"
        echo ""
        echo "üìã Para come√ßar:"
        echo "  1. $0 setup    # Configurar ambiente"
        echo "  2. $0 start    # Iniciar aplica√ß√£o"
        echo "  3. $0 demo     # Testar API (em outro terminal)"
        exit 1
        ;;
esac
